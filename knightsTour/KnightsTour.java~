import java.util.*;
import java.io.*;


public class KnightsTour{
	//constants for the class
	//terminal specific character to clear screen , or hide/show cursor
	final static String clear =  "\033[2J";
	final static String hide =  "\033[?25l";
	final static String show =  "\033[?25h";

	//instance variable
    private int[][]board;


		//terminal specific character to move the cursor
    private String go(int x,int y){
				return ("\033[" + x + ";" + y + "H");
    }
 
    public void wait(int millis){
				try {
						Thread.sleep(millis);
				}
				catch (InterruptedException e) {
				}
    }
    public String toString(){
	return toString(board);
    }
    public String toString(int[][] ar){
	String s = "\n";
	for(int i = 0; i < ar.length*ar[0].length; i++){
	    if(i%ar.length == 0){
		s+="\n";
		for(int z = 0; z < ar[0].length; z++){
		    s+="-";
		}
		s+="\n";
	    }
	    s+="|";
	    int x = ar[i/ar.length][i%ar.length];
	    if(x < 1000)
		s+="0";
	    if(x< 100)
		s+="0";
	    if(x < 10)
		s+="0";
	    s+=x;
	    s+="|";
	}
	return hide + go(0,0)+ s + "\n" + show;
    }
    public KnightsTour(int size){
	board = new int[size][size];
	solve();
    }

    

    public void solve(){
	int[][] nb = board;
	solve(nb ,0, 0, 0);
	System.out.println(toString(board));
    }
		
    public boolean solve(int[][] brd, int x,int y,int currentMoveNumber){
	if(x < 0 || x >= brd.length || y < 0 || y >= brd.length || (x == 0 && y == 0) || brd[y][x] != 0)
	    return false;
	System.out.println(toString(brd));
	wait(20);
	brd[y][x] = currentMoveNumber;
	if(currentMoveNumber == brd.length*brd.length - 1){
	    board = brd;
	    return true;
	}
	return(solve(brd, x-1, y-2, currentMoveNumber+1) || solve(brd, x+1, y-2, currentMoveNumber+1) || solve(brd, x-1, y+2, currentMoveNumber+1) || solve(brd, x+1, y+2, currentMoveNumber+1) || solve(brd, x-2, y-1, currentMoveNumber+1) || solve(brd, x+2, y-1, currentMoveNumber+1) || solve(brd, x-2, y+1, currentMoveNumber+1) || solve(brd, x+2, y+1, currentMoveNumber+1));
    }


}